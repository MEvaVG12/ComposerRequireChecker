<?xml version="1.0" encoding="UTF-8"?>

<!-- ============================================================== -->
<!-- Phing Build instructions                                       -->
<!-- http://www.phing.info/                                         -->
<!-- http://www.phing.info/get/phing-latest.phar                    -->
<!-- php -d phar.readonly=Off phing-latest.phar phar-build-release  -->
<!-- ============================================================== -->


<project name="composer-require-checker" default="phar-build">

    <property name="build-dir" value="build"/>
    <property name="phar-dir" value="build/phar"/>


    <!-- ============================================  -->
    <!-- Target: prepare                               -->
    <!-- ============================================  -->
    <target name="prepare">
        <echo msg="preparing build directory"/>
        <mkdir dir="${build-dir}"/>
    </target>


    <!-- ============================================  -->
    <!-- Target: run-test                               -->
    <!-- ============================================  -->
    <target name="run-test">
        <php returnProperty="php-executable" expression="PHP_BINARY" level="debug"/>
        <exec command="${php-executable} vendor/phpunit/phpunit/phpunit" passthru="true" checkreturn="true"/>
        <exec command="${php-executable} bin/composer-require-checker.php" passthru="true" checkreturn="true"/>
    </target>


    <!-- ============================================  -->
    <!-- Target: phar-clean                            -->
    <!-- ============================================  -->
    <target name="phar-clean">
        <echo msg="removing phar build directory"/>
        <delete dir="${phar-dir}"/>
    </target>


    <!-- ============================================  -->
    <!-- Target: phar-prepare                          -->
    <!-- ============================================  -->
    <target name="phar-prepare" depends="prepare">
        <echo msg="creating phar build directory"/>
        <mkdir dir="${phar-dir}"/>
    </target>


    <!-- ============================================  -->
    <!-- Target: phar-copy-source                      -->
    <!-- ============================================  -->
    <target name="phar-copy-source" depends="prepare">
        <!--copy needed source files to phar build directory-->
        <copy todir="${phar-dir}">
            <fileset dir="./">
                <include name="src/**/*.php"/>
                <include name="bin/*"/>
            </fileset>

            <filelist dir="." files="LICENSE"/>
            <filelist dir="." files="composer.json"/>
            <filelist dir="." files="composer.lock"/>
        </copy>
    </target>


    <!-- ============================================  -->
    <!-- Target: phar-prepare-dependencies             -->
    <!-- ============================================  -->
    <target name="phar-prepare-dependencies" depends="phar-copy-source">
        <!--install dependencies without development requirements-->
        <exec executable="composer" checkreturn="true" passthru="true">
            <arg value="install" />
            <arg value="--no-dev"/>
            <arg value="-o"/>
            <arg line="-d ${phar-dir}"/>
        </exec>

        <!--delete documentation and test files from dependencies-->
        <delete dir="${phar-dir}/vendor/symfony/console/Tests"/>
        <delete dir="${phar-dir}/vendor/nikic/php-parser/doc"/>
        <delete dir="${phar-dir}/vendor/nikic/php-parser/test"/>
        <delete dir="${phar-dir}/vendor/nikic/php-parser/test_old"/>
    </target>


    <!-- ============================================  -->
    <!-- Target: phar-build                            -->
    <!-- ============================================  -->
    <target name="phar-create" depends="phar-copy-source">
        <!--find out the version / tag-->
        <echo message="getting version string from git... "/>
        <exec command="git describe --tags --dirty=-dev --always" outputProperty="version-string"
              returnProperty="git-version-error"/>
        <if>
            <not>
                <equals arg1="${git-version-error}" arg2="0"/>
            </not>
            <then>
                <echo message="no tag found, setting version to 'development'"/>
                <property name="version-string" value="development" override="true"/>
            </then>
        </if>
        <echo message="Version is now: ${version-string}"/>

        <!--create the package-->
        <php expression="file_put_contents('${phar-dir}/clistub.php', '#!/usr/bin/env php' . PHP_EOL . Phar::createDefaultStub('bin/composer-require-checker.php'))"/>
        <pharpackage basedir="${phar-dir}"
                     destfile="${build-dir}/${phing.project.name}.phar"
                     stub="${phar-dir}/clistub.php"
                     compression="gzip">
            <fileset dir="${phar-dir}">
                <include name="**/**"/>
            </fileset>
            <metadata>
                <element name="version" value="${version-string}"/>
            </metadata>
        </pharpackage>
    </target>

    <target name="phar-sign" depends="phar-build">
        <delete file="${build-dir}/${phing.project.name}.phar.asc"/>
        <exec executable="gpg" checkreturn="true" passthru="true">
            <arg value="--batch" />
            <arg value="--local-user" />
            <arg value="magl@magl.net" />
            <arg value="--detach-sign" />
            <arg value="--output" />
            <arg path="${build-dir}/${phing.project.name}.phar.asc" />
            <arg path="${build-dir}/${phing.project.name}.phar" />
        </exec>

        <exec executable="gpg" checkreturn="true" passthru="true">
            <arg value="--verify" />
            <arg path="${build-dir}/${phing.project.name}.phar.asc" />
            <arg path="${build-dir}/${phing.project.name}.phar" />
        </exec>
    </target>

    <target name="phar-test">
        <exec executable="php" checkreturn="true" passthru="true">
            <arg path="${build-dir}/${phing.project.name}.phar" />
        </exec>

        <exec executable="php" checkreturn="true" passthru="true">
            <arg path="${build-dir}/${phing.project.name}.phar" />
            <arg value="check" />
            <arg value="--config-file" />
            <arg value="data/config.dist.json" />
        </exec>

        <exec executable="php" checkreturn="true" passthru="true">
            <arg path="${build-dir}/${phing.project.name}.phar" />
            <arg value="check" />
            <arg value="composer.json" />
        </exec>
    </target>

    <!-- ============================================  -->
    <!-- Target: phar-build-release                    -->
    <!-- ============================================  -->
    <target name="phar-build-release"
            depends="phar-build, run-test, phar-sign"/>

    <!-- ============================================  -->
    <!-- Target: phar-build                            -->
    <!-- ============================================  -->
    <target name="phar-build"
            depends="phar-clean, phar-prepare, phar-copy-source, phar-prepare-dependencies, phar-create, phar-test"/>


</project>
